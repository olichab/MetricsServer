{"version":3,"sources":["assets/images/icons/calendar.svg","store/metrics/metricsAction.js","store/metrics/actionTypes.js","components/DashBoard/CpuUsage.js","components/DashBoard/MemoryUsed.js","components/DashBoard/NetworkTransfer.js","components/DashBoard/DiskUtilization.js","components/DashBoard/CpuChart.js","components/DashBoard/MetricsExplorer.js","components/DashBoard.js","components/Calendar.js","components/TopBar.js","App.js","serviceWorker.js","helpers.js/formatMetricsList.js","helpers.js/formatListSelectAndSort.js","helpers.js/findMinAndMax.js","helpers.js/formatDataCpuUsage.js","helpers.js/readableBytes.js","helpers.js/formatDataMemoryUsed.js","helpers.js/formatDataNetworkTransfer.js","helpers.js/formatDataDiskUtilization.js","helpers.js/formatDataCpuChart.js","store/metrics/metricsReducer.js","store/configureStore.js","index.js"],"names":["module","exports","getAvgLoadAvg","loadAvgFilter","type","selectRowMetrics","idItemsSelect","idRowSelect","filterMetricsByParam","paramFilter","typeParam","CpuUsage","infosCpuUsage","useSelector","state","metrics","dispatch","useDispatch","useEffect","Container","className","Row","Col","Table","striped","map","e","key","id","usr","min","max","avg","sys","idl","wai","hiq","siq","MemoryUsed","infosMemoryUsed","Progress","multi","bar","value","used","percentage","buff","cach","xs","free","NetworkTransfer","infosNetworkTransfer","received","send","DiskUtilization","infosDiskUtilization","read","writ","CpuChart","dataCpuChart","i","md","xType","width","height","color","colorType","yDomain","x","split","yBaseValue","data","MetricsExplorer","tableRef","useRef","metricsListFiltered","avgLoadAvg","sortBy","sortDirection","current","recomputeRowHeights","_getRowHeight","index","_onRowClick","props","rowData","_rowRenderer","style","display","flexDirection","backgroundColor","defaultTableRowRenderer","marginTop","_cellRenderer","cellData","_noRowsRenderer","disableHeight","ref","rowClassName","headerClassName","gridClassName","headerHeight","rowHeight","rowGetter","rowRenderer","noRowsRenderer","rowCount","length","onRowClick","sort","label","dataKey","cellRenderer","DashBoard","size","order","lg","CalendarWithRange","withRange","Calendar","theme","selectionColor","textColor","default","active","weekdayColor","headerColor","todayColor","floatingNav","background","chevron","CalendarRange","useState","popoverOpen","setPopoverOpen","Media","object","src","calendarIcon","alt","Popover","placement","isOpen","target","toggle","Component","selected","start","Date","end","onSelect","date","eventType","startDate","moment","format","endDate","add","_onSelectDate","minDate","maxDate","locale","require","headerFormat","weekdays","blank","todayLabel","long","short","TopBar","selectValueFile","setSelectValueFile","selectValueInode","setSelectValueInode","filesList","inodesList","_handleClick","loadAvgSelected","selectLoadAvg","_handleSelectChange","action","name","fluid","ButtonGroup","Button","onClick","placeholder","classNamePrefix","options","noOptionsMessage","onChange","isClearable","App","Boolean","window","location","hostname","match","formatMetricsList","list","formattedList","dateComplete","time","slice","join","push","files","inodes","network","recv","memory","cpu","disk","oneMin","fiveMin","fifteenMin","formatListSelectAndSort","Set","JSON","stringify","parse","a","b","findMin","arr","Math","findMax","formatDataCpuUsage","formattedDataCpuUsage","countEntries","arrUsr","arrSys","arrIdl","arrWai","arrHiq","arrSiq","reduce","acc","val","array","undefined","round","readableBytes","bytes","floor","log","toFixed","formatDataMemoryUsed","formattedDataMemoryUsed","filter","total","usedTotal","buffTotal","cachTotal","freeTotal","formatDataNetworkTransfer","formattedDataNetworkTransfer","receivedtotal","sendTotal","formatDataDiskUtilization","formattedDataDiskUtilization","readTotal","writeTotal","formatDataCpuChart","infosCpu","formattedDataCpuChart","y","opacity","initialState","metricsList","metricsJson","idIRowSelect","rootReducer","combineReducers","totalLoadAvg","sortedList","_","reverse","metricsListFilteredByParam","store","middlewares","thunkMiddleware","middleWareEnhancer","applyMiddleware","createStore","composeWithDevTools","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45ddbadf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calendar.def94e70.svg\";","import {\n  GET_METRICS_LIST,\n  GET_FILES_LIST,\n  GET_INODES_LIST,\n  GET_DATA_CPU_CHART,\n  SELECT_LOAD_AVG,\n  GET_AVG_LOAD_AVG,\n  SELECT_ROW_METRICS,\n  SORT_METRICS_ASC_DESC,\n  FILTER_METRICS_BY_PARAM,\n  GET_INFOS_CPU_USAGE,\n  GET_INFOS_MEMORY_USED,\n  GET_INFOS_NETWORK_TRANSFER,\n  GET_INFOS_DISK_UTILIZATION,\n} from \"./actionTypes\";\n\nexport const getMetricsList = () => {\n  return { type: GET_METRICS_LIST };\n};\n\nexport const getFilesList = () => {\n  return { type: GET_FILES_LIST };\n};\n\nexport const getInodesList = () => {\n  return { type: GET_INODES_LIST };\n};\n\nexport const getDataCpuChart = () => {\n  return { type: GET_DATA_CPU_CHART };\n};\n\nexport const selectLoadAvg = (loadAvgFilter) => {\n  return { type: SELECT_LOAD_AVG, loadAvgFilter };\n};\n\nexport const getAvgLoadAvg = (loadAvgFilter) => {\n  return { type: GET_AVG_LOAD_AVG, loadAvgFilter };\n};\n\nexport const selectRowMetrics = (idItemsSelect, idRowSelect) => {\n  return { type: SELECT_ROW_METRICS, idItemsSelect, idRowSelect };\n};\n\nexport const sortMetricsAscDesc = () => {\n  return { type: SORT_METRICS_ASC_DESC };\n};\n\nexport const filterMetricsByParam = (paramFilter, typeParam) => {\n  return {\n    type: FILTER_METRICS_BY_PARAM,\n    paramFilter,\n    typeParam,\n  };\n};\n\nexport const getInfosCpuUsage = () => {\n  return { type: GET_INFOS_CPU_USAGE };\n};\n\nexport const getInfosMemoryUsed = () => {\n  return { type: GET_INFOS_MEMORY_USED };\n};\n\nexport const getInfosNetworkTransfer = () => {\n  return { type: GET_INFOS_NETWORK_TRANSFER };\n};\n\nexport const getInfosDiskUtilization = () => {\n  return { type: GET_INFOS_DISK_UTILIZATION };\n};\n","export const GET_METRICS_LIST = \"GET_METRICS_LIST\";\nexport const GET_FILES_LIST = \"GET_FILES_LIST\";\nexport const GET_INODES_LIST = \"GET_INODES_LIST\";\nexport const GET_DATA_CPU_CHART = \"GET_DATA_CPU_CHART\";\nexport const SELECT_LOAD_AVG = \"SELECT_LOAD_AVG\";\nexport const GET_AVG_LOAD_AVG = \"GET_AVG_LOAD_AVG\";\nexport const SELECT_ROW_METRICS = \"SELECT_ROW_METRICS\";\nexport const SORT_METRICS_ASC_DESC = \"SORT_METRICS_ASC_DESC\";\nexport const FILTER_METRICS_BY_PARAM = \"FILTER_METRICS_BY_PARAM\";\nexport const GET_INFOS_CPU_USAGE = \"GET_INFOS_CPU_USAGE\";\nexport const GET_INFOS_MEMORY_USED = \"GET_INFOS_MEMORY_USED\";\nexport const GET_INFOS_NETWORK_TRANSFER = \"GET_INFOS_NETWORK_TRANSFER\";\nexport const GET_INFOS_DISK_UTILIZATION = \"GET_INFOS_DISK_UTILIZATION\";\n","import React, { useEffect, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, Table } from \"reactstrap\";\nimport { getInfosCpuUsage } from \"../../store/metrics/metricsAction\";\n\nimport \"../../scss/DashBoard/CpuUsage.scss\";\n\nexport default function CpuUsage() {\n  const infosCpuUsage = useSelector(state => state.metrics.infosCpuUsage);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getInfosCpuUsage());\n  }, [dispatch]);\n\n  return (\n    <Container className=\"container-cpu-usage\">\n      <Row>\n        <Col>\n          <h5>CPU usage (%)</h5>\n          <Table striped>\n            <thead>\n              <tr>\n                <th />\n                <th>Min</th>\n                <th>Max</th>\n                <th>Avg</th>\n              </tr>\n            </thead>\n            <tbody>\n              {infosCpuUsage?.map(e => (\n                <Fragment key={e.id}>\n                  <tr>\n                    <th>Usr</th>\n                    <td>{e.usr.min}</td>\n                    <td>{e.usr.max}</td>\n                    <td>{e.usr.avg}</td>\n                  </tr>\n                  <tr>\n                    <th>Sys</th>\n                    <td>{e.sys.min}</td>\n                    <td>{e.sys.max}</td>\n                    <td>{e.sys.avg}</td>\n                  </tr>\n                  <tr>\n                    <th>Idl</th>\n                    <td>{e.idl.min}</td>\n                    <td>{e.idl.max}</td>\n                    <td>{e.idl.avg}</td>\n                  </tr>\n                  <tr>\n                    <th>Wai</th>\n                    <td>{e.wai.min}</td>\n                    <td>{e.wai.max}</td>\n                    <td>{e.wai.avg}</td>\n                  </tr>\n                  <tr>\n                    <th>Hiq</th>\n                    <td>{e.hiq.min}</td>\n                    <td>{e.hiq.max}</td>\n                    <td>{e.hiq.avg}</td>\n                  </tr>\n                  <tr>\n                    <th>Siq</th>\n                    <td>{e.siq.min}</td>\n                    <td>{e.siq.max}</td>\n                    <td>{e.siq.avg}</td>\n                  </tr>\n                </Fragment>\n              ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, Progress } from \"reactstrap\";\nimport { getInfosMemoryUsed } from \"../../store/metrics/metricsAction\";\nimport \"../../scss/DashBoard/MemoryUsed.scss\";\n\nexport default function MemoryUsed() {\n  const infosMemoryUsed = useSelector((state) => state.metrics.infosMemoryUsed);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getInfosMemoryUsed());\n  }, [dispatch]);\n\n  return (\n    <Container className=\"container-memory-used\">\n      <Row>\n        <Col>\n          <h5>Memory used</h5>\n          {infosMemoryUsed?.map((e) => (\n            <Fragment key={e.id}>\n              <Progress multi>\n                <Progress bar value={e.used.percentage} className=\"bar-used\" />\n                <Progress bar value={e.buff.percentage} className=\"bar-buff\" />\n                <Progress bar value={e.cach.percentage} className=\"bar-cach\" />\n              </Progress>\n              <Row className=\"infos-memory-used\">\n                <Col xs=\"6\">\n                  <p>\n                    <span className=\"label-used\">Used : </span>\n                    {e.used.value}\n                  </p>\n                </Col>\n                <Col xs=\"6\">\n                  <p>\n                    <span className=\"label-buff\">Buff : </span>\n                    {e.buff.value}\n                  </p>\n                </Col>\n                <Col xs=\"6\">\n                  <p>\n                    <span className=\"label-cach\">Cach : </span>\n                    {e.cach.value}\n                  </p>\n                </Col>\n                <Col xs=\"6\">\n                  <p>\n                    <span className=\"label-free\">Free : </span>\n                    {e.free.value}\n                  </p>\n                </Col>\n              </Row>\n            </Fragment>\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, Fragment } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getInfosNetworkTransfer } from \"../../store/metrics/metricsAction\";\n\nimport \"../../scss/DashBoard/NetworkTransfer.scss\";\n\nexport default function NetworkTransfer() {\n  const infosNetworkTransfer = useSelector(\n    state => state.metrics.infosNetworkTransfer\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getInfosNetworkTransfer());\n  }, [dispatch]);\n\n  return (\n    <Container className=\"container-network-transfer\">\n      <Row>\n        <Col>\n          <h5>Network transfer</h5>\n          {infosNetworkTransfer.map(e => (\n            <Fragment key={e.id}>\n              <p>Received : {e.received}</p>\n              <p>Send : {e.send}</p>\n            </Fragment>\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, Fragment } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getInfosDiskUtilization } from \"../../store/metrics/metricsAction\";\nimport \"../../scss/DashBoard/DiskUtilization.scss\";\n\nexport default function DiskUtilization() {\n  const infosDiskUtilization = useSelector(\n    state => state.metrics.infosDiskUtilization\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getInfosDiskUtilization());\n  }, [dispatch]);\n\n  return (\n    <Container className=\"container-disk-utilization\">\n      <Row>\n        <Col>\n          <h5>Disk utilization</h5>\n          {infosDiskUtilization.map(e => (\n            <Fragment key={e.id}>\n              <p>Read : {e.read}</p>\n              <p>Write : {e.writ}</p>\n            </Fragment>\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"react-vis/dist/style.css\";\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  VerticalBarSeries,\n  HorizontalGridLines,\n} from \"react-vis\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { getDataCpuChart } from \"../../store/metrics/metricsAction\";\nimport \"../../scss/DashBoard/CpuChart.scss\";\n\nexport default function CpuChart() {\n  const dataCpuChart = useSelector((state) => state.metrics.dataCpuChart);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getDataCpuChart());\n  }, [dispatch]);\n\n  return (\n    <Container className=\"container-cpu-chart\">\n      <Row>\n        {dataCpuChart.map((e, i) => (\n          <Col key={i} xs={6} md={4} className=\"my-auto\">\n            <XYPlot\n              className=\"chart\"\n              xType=\"ordinal\"\n              width={170}\n              height={130}\n              color=\"#043c7c\"\n              colorType=\"literal\"\n              yDomain={(e[0]?.x).split(\" \")[0] === \"idl\" ? [0, 100] : [0, 1]}\n              yBaseValue={0}\n            >\n              <VerticalGridLines />\n              <HorizontalGridLines />\n              <XAxis />\n              <YAxis />\n              <VerticalBarSeries\n                className=\"vertical-bar-series-example\"\n                data={dataCpuChart[i]}\n              />\n            </XYPlot>\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport {\n  AutoSizer,\n  Column,\n  Table,\n  defaultTableRowRenderer,\n} from \"react-virtualized\";\nimport {\n  getMetricsList,\n  sortMetricsAscDesc,\n  selectRowMetrics,\n  getAvgLoadAvg,\n  getInfosMemoryUsed,\n  getInfosNetworkTransfer,\n  getInfosDiskUtilization,\n} from \"../../store/metrics/metricsAction\";\nimport CpuChart from \"./CpuChart\";\nimport \"react-virtualized/styles.css\";\nimport \"../../scss/DashBoard/MetricsExplorer.scss\";\n\nexport default function MetricsExplorer() {\n  const tableRef = useRef();\n  const metricsListFiltered = useSelector(\n    (state) => state.metrics.metricsListFiltered\n  );\n  const loadAvgFilter = useSelector((state) => state.metrics.loadAvgFilter);\n  const avgLoadAvg = useSelector((state) => state.metrics.avgLoadAvg);\n  const sortBy = useSelector((state) => state.metrics.sortBy);\n  const sortDirection = useSelector((state) => state.metrics.sortDirection);\n  const idItemsSelect = useSelector((state) => state.metrics.idItemsSelect);\n  const idRowSelect = useSelector((state) => state.metrics.idRowSelect);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getMetricsList());\n    dispatch(getAvgLoadAvg(loadAvgFilter));\n  }, [dispatch, loadAvgFilter]);\n  useEffect(() => {\n    tableRef.current.recomputeRowHeights();\n  }, [idItemsSelect]);\n\n  const _getRowHeight = ({ index }) => (index === idRowSelect ? 400 : 32);\n\n  const _onRowClick = (props) => {\n    const { index, rowData } = props;\n    if (rowData.id === idItemsSelect) {\n      dispatch(selectRowMetrics(-1, -1));\n    } else {\n      dispatch(selectRowMetrics(rowData.id, index));\n    }\n    dispatch(getInfosMemoryUsed());\n    dispatch(getInfosNetworkTransfer());\n    dispatch(getInfosDiskUtilization());\n  };\n\n  const _rowRenderer = (props) => {\n    const { style, className, key, rowData } = props;\n    if (rowData.id === idItemsSelect) {\n      return (\n        <div\n          style={{\n            ...style,\n            display: \"flex\",\n            flexDirection: \"column\",\n            backgroundColor: \"#fff\",\n          }}\n          className={className}\n          key={key}\n        >\n          {defaultTableRowRenderer({\n            ...props,\n            style: { width: style.width, height: \"48px\" },\n          })}\n          <div\n            style={{\n              marginTop: \"0\",\n              height: 48,\n            }}\n          >\n            <h5 className=\"title-cpu-chart\">Cpu details</h5>\n            <CpuChart />\n          </div>\n        </div>\n      );\n    }\n    return defaultTableRowRenderer(props);\n  };\n\n  const _cellRenderer = (props) => {\n    const { cellData } = props;\n    if (cellData > avgLoadAvg) {\n      return (\n        <div\n          style={{\n            color: \"#d91e18\",\n          }}\n        >\n          {cellData}\n        </div>\n      );\n    }\n    return (\n      <div\n        style={{\n          color: \"#26a65b\",\n        }}\n      >\n        {cellData}\n      </div>\n    );\n  };\n\n  const _noRowsRenderer = () => {\n    return <div className=\"noRows\">No results found</div>;\n  };\n\n  return (\n    <Container className=\"container-metrics-explorer\">\n      <Row>\n        <Col>\n          <AutoSizer disableHeight>\n            {({ width }) => (\n              <Table\n                ref={tableRef}\n                rowClassName=\"table-row\"\n                headerClassName=\"header-list-metrics\"\n                gridClassName=\"grid-list-metrics\"\n                headerHeight={32}\n                width={width}\n                height={690}\n                rowHeight={_getRowHeight}\n                rowGetter={({ index }) => metricsListFiltered[index]}\n                rowRenderer={_rowRenderer}\n                noRowsRenderer={_noRowsRenderer}\n                rowCount={metricsListFiltered?.length}\n                onRowClick={_onRowClick}\n                sort={() => dispatch(sortMetricsAscDesc())}\n                sortBy={sortBy}\n                sortDirection={sortDirection}\n              >\n                <Column label=\"Date\" dataKey=\"time\" width={width * 0.3} />\n                <Column\n                  label=\"Load avg (%)\"\n                  dataKey={loadAvgFilter}\n                  width={width * 0.25}\n                  cellRenderer={_cellRenderer}\n                />\n                <Column label=\"File\" dataKey=\"files\" width={width * 0.2} />\n                <Column label=\"Inode\" dataKey=\"inodes\" width={width * 0.2} />\n              </Table>\n            )}\n          </AutoSizer>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport CpuUsage from \"./DashBoard/CpuUsage\";\nimport MemoryUsed from \"./DashBoard/MemoryUsed\";\nimport NetworkTransfer from \"./DashBoard/NetworkTransfer\";\nimport DiskUtilization from \"./DashBoard/DiskUtilization\";\nimport MetricsExplorer from \"./DashBoard/MetricsExplorer\";\nimport \"../scss/DashBoard.scss\";\n\nexport default function DashBoard() {\n  return (\n    <div>\n      <Container className=\"container-dashboard\">\n        <Row>\n          <Col xs={{ size: 12, order: 2 }} lg={{ size: 4, order: 1 }}>\n            <CpuUsage />\n            <MemoryUsed />\n            <NetworkTransfer />\n            <DiskUtilization />\n          </Col>\n          <Col xs={{ size: 12, order: 1 }} lg={{ size: 8, order: 2 }}>\n            <MetricsExplorer />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Media, Popover } from \"reactstrap\";\nimport moment from \"moment\";\nimport InfiniteCalendar, { Calendar, withRange } from \"react-infinite-calendar\";\nimport {\n  filterMetricsByParam,\n  getInfosMemoryUsed,\n  getInfosNetworkTransfer,\n  getInfosDiskUtilization,\n} from \"../store/metrics/metricsAction\";\nimport \"react-infinite-calendar/styles.css\";\nimport \"../scss/Calendar.scss\";\nimport calendarIcon from \"../assets/images/icons/calendar.svg\";\n\nconst CalendarWithRange = withRange(Calendar);\nconst theme = {\n  selectionColor: \"#043c7c\",\n  textColor: {\n    default: \"#585858\",\n    active: \"#FFF\",\n  },\n  weekdayColor: \"#043c7c\",\n  headerColor: \"#097aee\",\n  todayColor: \"#097aee\",\n  floatingNav: {\n    background: \"#097aee\",\n    color: \"#FFF\",\n    chevron: \"transparent\",\n  },\n};\n\nexport default function CalendarRange() {\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const toggle = () => setPopoverOpen(!popoverOpen);\n  const dispatch = useDispatch();\n  const _onSelectDate = (date) => {\n    if (date.eventType === 3) {\n      setPopoverOpen(false);\n      dispatch(\n        filterMetricsByParam(\n          {\n            startDate: moment(date.start).format(\"DD[-]MM[-]YYYY HH:mm:ss\"),\n            endDate: moment(date.end)\n              .add(\"days\", 1)\n              .format(\"DD[-]MM[-]YYYY HH:mm:ss\"),\n          },\n          \"date\"\n        )\n      );\n      dispatch(getInfosMemoryUsed());\n      dispatch(getInfosNetworkTransfer());\n      dispatch(getInfosDiskUtilization());\n    }\n  };\n\n  return (\n    <>\n      <Media\n        object\n        src={calendarIcon}\n        alt=\"calendar icon\"\n        className=\"calendar-icon\"\n        id=\"popoverCalendar\"\n        type=\"button\"\n      />\n      <Popover\n        className=\"popover-calendar\"\n        placement=\"auto-end\"\n        isOpen={popoverOpen}\n        target=\"popoverCalendar\"\n        toggle={toggle}\n      >\n        <InfiniteCalendar\n          width={360}\n          height={400}\n          Component={CalendarWithRange}\n          selected={{\n            start: new Date(2020, 2, 16),\n            end: new Date(2020, 2, 19),\n          }}\n          onSelect={(date) => _onSelectDate(date)}\n          minDate={new Date(2020, 2, 16)}\n          maxDate={new Date(2020, 2, 19)}\n          theme={theme}\n          locale={{\n            locale: require(\"date-fns/locale/fr\"),\n            headerFormat: \"dddd, D MMM\",\n            weekdays: [\"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\"],\n            blank: \"Aucune date selectionnee\",\n            todayLabel: {\n              long: \"Aujourd'hui\",\n              short: \"Auj.\",\n            },\n          }}\n        />\n      </Popover>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, Button, ButtonGroup } from \"reactstrap\";\nimport Select from \"react-select\";\nimport Calendar from \"./Calendar\";\nimport {\n  getFilesList,\n  getInodesList,\n  filterMetricsByParam,\n  selectLoadAvg,\n  getAvgLoadAvg,\n  selectRowMetrics,\n  getInfosMemoryUsed,\n  getInfosNetworkTransfer,\n  getInfosDiskUtilization,\n} from \"../store/metrics/metricsAction\";\nimport \"../scss/TopBar.scss\";\n\nexport default function TopBar() {\n  const [selectValueFile, setSelectValueFile] = useState(null);\n  const [selectValueInode, setSelectValueInode] = useState(null);\n  const filesList = useSelector((state) => state.metrics.filesList);\n  const inodesList = useSelector((state) => state.metrics.inodesList);\n  const loadAvgFilter = useSelector((state) => state.metrics.loadAvgFilter);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getFilesList());\n    dispatch(getInodesList());\n  }, [dispatch]);\n\n  const _handleClick = (loadAvgSelected) => {\n    dispatch(selectLoadAvg(loadAvgSelected));\n    dispatch(getAvgLoadAvg(loadAvgSelected));\n  };\n\n  const _handleSelectChange = (e, action) => {\n    dispatch(selectRowMetrics(-1, -1));\n    if (action.name === \"select_file\") {\n      setSelectValueFile(e);\n      setSelectValueInode(null);\n      dispatch(filterMetricsByParam(e?.value, \"files\"));\n    } else if (action.name === \"select_inode\") {\n      dispatch(filterMetricsByParam(e?.value, \"inodes\"));\n      setSelectValueFile(null);\n      setSelectValueInode(e);\n    }\n    dispatch(getInfosMemoryUsed());\n    dispatch(getInfosNetworkTransfer());\n    dispatch(getInfosDiskUtilization());\n  };\n\n  return (\n    <Container className=\"container-top-bar\" fluid>\n      <Row className=\"align-items-end\">\n        <Col xs=\"6\" md=\"auto\">\n          <Calendar />\n        </Col>\n        <Col xs=\"6\" md=\"auto\">\n          <p>Load average</p>\n          <ButtonGroup>\n            <Button\n              className=\"btn-load-avg\"\n              onClick={() => _handleClick(\"oneMin\")}\n              active={loadAvgFilter === \"oneMin\"}\n            >\n              1m\n            </Button>\n            <Button\n              className=\"btn-load-avg\"\n              onClick={() => _handleClick(\"fiveMin\")}\n              active={loadAvgFilter === \"fiveMin\"}\n            >\n              5m\n            </Button>\n            <Button\n              className=\"btn-load-avg\"\n              onClick={() => _handleClick(\"fifteenMin\")}\n              active={loadAvgFilter === \"fifteenMin\"}\n            >\n              15m\n            </Button>\n          </ButtonGroup>\n        </Col>\n        <Col xs=\"6\" md=\"auto\">\n          <p>Files</p>\n          <Select\n            key={`key__${selectValueFile}`}\n            name={\"select_file\"}\n            placeholder=\"Select file\"\n            className=\"react-select-container\"\n            classNamePrefix=\"react-select\"\n            options={filesList}\n            noOptionsMessage={() => \"No files found\"}\n            value={selectValueFile}\n            onChange={_handleSelectChange}\n            isClearable\n          />\n        </Col>\n        <Col xs=\"6\" md=\"auto\">\n          <p>Inodes</p>\n          <Select\n            key={`key__${selectValueInode}`}\n            name={\"select_inode\"}\n            placeholder=\"Select inode\"\n            options={inodesList}\n            noOptionsMessage={() => \"No files found\"}\n            className=\"react-select-container\"\n            classNamePrefix=\"react-select\"\n            value={selectValueInode}\n            onChange={_handleSelectChange}\n            isClearable\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport DashBoard from \"./components/DashBoard\";\nimport TopBar from \"./components/TopBar\";\nimport \"./scss/App.scss\";\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <h2>Metrics server</h2>\n      <TopBar />\n      <DashBoard />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import moment from \"moment\";\n\nconst formatMetricsList = (list) => {\n  const formattedList = [];\n  list.map((e, i) => {\n    const dateComplete = [e.time.slice(0, 5), \"-2020\", e.time.slice(5)].join(\n      \"\"\n    );\n    return formattedList.push({\n      id: i,\n      files: e.files,\n      inodes: e.inodes,\n      network: { recv: e.recv, send: e.send },\n      memory: { used: e.used, buff: e.buff, cach: e.cach, free: e.free },\n      cpu: {\n        usr: e.usr,\n        sys: e.sys,\n        idl: e.idl,\n        wai: e.wai,\n        hiq: e.hiq,\n        siq: e.siq,\n      },\n      time: moment(dateComplete, \"DD-MM-YYYY h:mm:ss\").format(\n        \"DD-MM-YYYY h:mm:ss\"\n      ),\n      disk: { read: e.read, writ: e.writ },\n      oneMin: e[\"1m\"],\n      fiveMin: e[\"5m\"],\n      fifteenMin: e[\"15m\"],\n    });\n  });\n  return formattedList;\n};\n\nexport default formatMetricsList;\n","/**\n * Format data for select\n *\n * @param {Array} list list metrics\n * @param {String} type type (files or inodes)\n */\n\nconst formatListSelectAndSort = (list, type) => {\n  const formattedList = [];\n  list.map((e) =>\n    formattedList.push({ value: e[`${type}`], label: e[`${type}`] })\n  );\n  // unique values and sort asc\n  const uniqueFilesList = [...new Set(formattedList.map(JSON.stringify))]\n    .map(JSON.parse)\n    .sort((a, b) => a.value - b.value);\n  return uniqueFilesList;\n};\n\nexport default formatListSelectAndSort;\n","/**\n * Find min and max value in array\n *\n * @param {Array} arr\n */\nexport const findMin = (arr) => {\n  return Math.min(...arr);\n};\n\nexport const findMax = (arr) => {\n  return Math.max(...arr);\n};\n","import { findMin, findMax } from \"./findMinAndMax\";\n/**\n * Format data for cpu usage\n *\n * @param {Array} list list metrics\n */\nconst formatDataCpuUsage = (list) => {\n  const formattedDataCpuUsage = [];\n  let countEntries = 1; // init to 1 because first reduce index is 1\n  const [arrUsr, arrSys, arrIdl, arrWai, arrHiq, arrSiq] = [\n    [],\n    [],\n    [],\n    [],\n    [],\n    [],\n  ];\n  list.reduce((acc, val, index, array) => {\n    if (\n      val.cpu.usr !== undefined &&\n      val.cpu.sys !== undefined &&\n      val.cpu.idl !== undefined &&\n      val.cpu.wai !== undefined &&\n      val.cpu.hiq !== undefined &&\n      val.cpu.siq !== undefined\n    ) {\n      countEntries += 1;\n      acc.cpu.usr += val.cpu.usr;\n      acc.cpu.sys += val.cpu.sys;\n      acc.cpu.idl += val.cpu.idl;\n      acc.cpu.wai += val.cpu.wai;\n      acc.cpu.hiq += val.cpu.hiq;\n      acc.cpu.siq += val.cpu.siq;\n      arrUsr.push(val.cpu.usr);\n      arrSys.push(val.cpu.sys);\n      arrIdl.push(val.cpu.idl);\n      arrWai.push(val.cpu.wai);\n      arrHiq.push(val.cpu.hiq);\n      arrSiq.push(val.cpu.siq);\n    }\n    return index === array.length - 1\n      ? formattedDataCpuUsage.push({\n          id: 0,\n          usr: {\n            min: findMin(arrUsr),\n            max: findMax(arrUsr),\n            avg: Math.round((acc.cpu.usr / countEntries) * 1000) / 1000,\n          },\n          sys: {\n            min: findMin(arrSys),\n            max: findMax(arrSys),\n            avg: Math.round((acc.cpu.sys / countEntries) * 1000) / 1000,\n          },\n          idl: {\n            min: findMin(arrIdl),\n            max: findMax(arrIdl),\n            avg: Math.round((acc.cpu.idl / countEntries) * 1000) / 1000,\n          },\n          wai: {\n            min: findMin(arrWai),\n            max: findMax(arrWai),\n            avg: Math.round((acc.cpu.wai / countEntries) * 1000) / 1000,\n          },\n          hiq: {\n            min: findMin(arrHiq),\n            max: findMax(arrHiq),\n            avg: Math.round((acc.cpu.hiq / countEntries) * 1000) / 1000,\n          },\n          siq: {\n            min: findMin(arrSiq),\n            max: findMax(arrSiq),\n            avg: Math.round((acc.cpu.siq / countEntries) * 1000) / 1000,\n          },\n        })\n      : acc;\n  });\n  return formattedDataCpuUsage;\n};\n\nexport default formatDataCpuUsage;\n","/**\n * Converts a long string of bytes into a readable format  (KB, MB, GB, TB, YB)\n *\n * @param {Int} bytes The number of bytes.\n */\nconst readableBytes = (bytes) => {\n  if (bytes > 0) {\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\n    const sizes = [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"];\n    return `${(bytes / 1024 ** i).toFixed(1)} ${sizes[i]}`;\n  }\n  return \"0\";\n};\n\nexport default readableBytes;\n","import readableBytes from \"./readableBytes\";\n/**\n * Format data for memory used\n *\n * @param {Array} list list metrics\n * @param {Number} index index row selected\n */\nconst formatDataMemoryUsed = (list, id) => {\n  const formattedDataMemoryUsed = [];\n  if (id !== -1) {\n    list\n      .filter((e) => e.id === id)\n      .map((e) => {\n        const total =\n          e.memory.used + e.memory.buff + e.memory.cach + e.memory.free;\n        return formattedDataMemoryUsed.push({\n          id: 0,\n          used: {\n            value: readableBytes(e.memory.used),\n            percentage: ((100 * e.memory.used) / total).toFixed(1),\n          },\n          buff: {\n            value: readableBytes(e.memory.buff),\n            percentage: ((100 * e.memory.buff) / total).toFixed(1),\n          },\n          cach: {\n            value: readableBytes(e.memory.cach),\n            percentage: ((100 * e.memory.cach) / total).toFixed(1),\n          },\n          free: {\n            value: readableBytes(e.memory.free),\n            percentage: ((100 * e.memory.free) / total).toFixed(1),\n          },\n        });\n      });\n  } else {\n    let usedTotal = 0;\n    let buffTotal = 0;\n    let cachTotal = 0;\n    let freeTotal = 0;\n    list.map((e, index) => {\n      if (\n        e.memory.used !== undefined &&\n        e.memory.buff !== undefined &&\n        e.memory.cach !== undefined &&\n        e.memory.free !== undefined\n      ) {\n        usedTotal += e.memory.used;\n        buffTotal += e.memory.buff;\n        cachTotal += e.memory.cach;\n        freeTotal += e.memory.free;\n      }\n\n      const total = usedTotal + buffTotal + cachTotal + freeTotal;\n      return (\n        index === list.length - 1 &&\n        formattedDataMemoryUsed.push({\n          id: 0,\n          used: {\n            value: readableBytes(usedTotal),\n            percentage: ((100 * usedTotal) / total).toFixed(1),\n          },\n          buff: {\n            value: readableBytes(buffTotal),\n            percentage: ((100 * buffTotal) / total).toFixed(1),\n          },\n          cach: {\n            value: readableBytes(cachTotal),\n            percentage: ((100 * cachTotal) / total).toFixed(1),\n          },\n          free: {\n            value: readableBytes(freeTotal),\n            percentage: ((100 * freeTotal) / total).toFixed(1),\n          },\n        })\n      );\n    });\n  }\n  return formattedDataMemoryUsed;\n};\n\nexport default formatDataMemoryUsed;\n","import readableBytes from \"./readableBytes\";\n/**\n * Format data for network transfer\n *\n * @param {Array} list list metrics\n * @param {Number} index index row selected\n */\nconst formatDataNetworkTransfer = (list, id) => {\n  const formattedDataNetworkTransfer = [];\n  // if a row is selected\n  if (id !== -1) {\n    list\n      .filter((e) => e.id === id)\n      .map((e) =>\n        formattedDataNetworkTransfer.push({\n          id: 0,\n          received: readableBytes(e.network.recv),\n          send: readableBytes(e.network.send),\n        })\n      );\n  } else {\n    let receivedtotal = 0;\n    let sendTotal = 0;\n    list.map((e, index) => {\n      if (e.network.recv !== undefined && e.network.send !== undefined) {\n        receivedtotal += e.network.recv;\n        sendTotal += e.network.send;\n      }\n      return (\n        index === list.length - 1 &&\n        formattedDataNetworkTransfer.push({\n          id: 0,\n          received: readableBytes(receivedtotal),\n          send: readableBytes(sendTotal),\n        })\n      );\n    });\n  }\n  return formattedDataNetworkTransfer;\n};\n\nexport default formatDataNetworkTransfer;\n","import readableBytes from \"./readableBytes\";\n/**\n * Format data for disk utilization\n *\n * @param {Array} list list metrics\n * @param {Number} index index row selected\n */\nconst formatDataDiskUtilization = (list, id) => {\n  const formattedDataDiskUtilization = [];\n  // if a row is selected\n  if (id !== -1) {\n    list\n      .filter((e) => e.id === id)\n      .map((e) =>\n        formattedDataDiskUtilization.push({\n          id: 0,\n          read: readableBytes(e.disk.read),\n          writ: readableBytes(e.disk.writ),\n        })\n      );\n  } else {\n    let readTotal = 0;\n    let writeTotal = 0;\n    list.map((e, index) => {\n      if (e.disk.read !== undefined && e.disk.writ !== undefined) {\n        readTotal += e.disk.read;\n        writeTotal += e.disk.writ;\n      }\n      return (\n        index === list.length - 1 &&\n        formattedDataDiskUtilization.push({\n          id: 0,\n          read: readableBytes(readTotal),\n          writ: readableBytes(writeTotal),\n        })\n      );\n    });\n  }\n  return formattedDataDiskUtilization;\n};\n\nexport default formatDataDiskUtilization;\n","/**\n * Format data for cpu chart\n *\n * @param {Array} list list metrics\n * @param {Number} index index row selected\n * @param {Array} infosCpu list infos cpu (min, max, avg)\n */\nconst formatDataCpuChart = (list, index, infosCpu) => {\n  const formattedDataCpuChart = [];\n  list\n    .filter((e) => e.id === index)\n    .map((e) =>\n      formattedDataCpuChart.push(\n        [\n          {\n            x: `usr : ${e.cpu.usr}`,\n            y: e.cpu.usr,\n          },\n          {\n            x: `avg : ${infosCpu[0].usr.avg}`,\n            y: infosCpu[0].usr.avg,\n            opacity: 0.3,\n          },\n        ],\n        [\n          {\n            x: `sys : ${e.cpu.sys}`,\n            y: e.cpu.sys,\n          },\n          {\n            x: `avg : ${infosCpu[0].sys.avg}`,\n            y: infosCpu[0].sys.avg,\n            opacity: 0.3,\n          },\n        ],\n        [\n          {\n            x: `idl : ${e.cpu.idl}`,\n            y: e.cpu.idl,\n          },\n          {\n            x: `avg : ${infosCpu[0].idl.avg}`,\n            y: infosCpu[0].idl.avg,\n            opacity: 0.3,\n          },\n        ],\n        [\n          {\n            x: `wai : ${e.cpu.wai}`,\n            y: e.cpu.wai,\n          },\n          {\n            x: `avg : ${infosCpu[0].wai.avg}`,\n            y: infosCpu[0].wai.avg,\n            opacity: 0.3,\n          },\n        ],\n        [\n          {\n            x: `hiq : ${e.cpu.hiq}`,\n            y: e.cpu.hiq,\n          },\n          {\n            x: `avg : ${infosCpu[0].hiq.avg}`,\n            y: infosCpu[0].hiq.avg,\n            opacity: 0.3,\n          },\n        ],\n        [\n          {\n            x: `siq : ${e.cpu.siq}`,\n            y: e.cpu.siq,\n          },\n          {\n            x: `avg : ${infosCpu[0].siq.avg}`,\n            y: infosCpu[0].siq.avg,\n            opacity: 0.3,\n          },\n        ]\n      )\n    );\n\n  return formattedDataCpuChart;\n};\n\nexport default formatDataCpuChart;\n","import _ from \"lodash\";\nimport moment from \"moment\";\n\nimport {\n  GET_METRICS_LIST,\n  GET_FILES_LIST,\n  GET_INODES_LIST,\n  GET_DATA_CPU_CHART,\n  SELECT_LOAD_AVG,\n  GET_AVG_LOAD_AVG,\n  SELECT_ROW_METRICS,\n  SORT_METRICS_ASC_DESC,\n  FILTER_METRICS_BY_PARAM,\n  GET_INFOS_CPU_USAGE,\n  GET_INFOS_MEMORY_USED,\n  GET_INFOS_NETWORK_TRANSFER,\n  GET_INFOS_DISK_UTILIZATION,\n} from \"./actionTypes\";\nimport metricsJson from \"../../assets/metrics.json\";\nimport formatMetricsList from \"../../helpers.js/formatMetricsList\";\nimport formatListSelectAndSort from \"../../helpers.js/formatListSelectAndSort\";\nimport formatDataCpuUsage from \"../../helpers.js/formatDataCpuUsage\";\nimport formatDataMemoryUsed from \"../../helpers.js/formatDataMemoryUsed\";\nimport formatDataNetworkTransfer from \"../../helpers.js/formatDataNetworkTransfer\";\nimport formatDataDiskUtilization from \"../../helpers.js/formatDataDiskUtilization\";\nimport formatDataCpuChart from \"../../helpers.js/formatDataCpuChart\";\n\n// Constants\nconst ASC = \"ASC\";\nconst DESC = \"DESC\";\n\nconst initialState = {\n  metricsList: formatMetricsList(metricsJson),\n  metricsListFiltered: formatMetricsList(metricsJson),\n  loadAvgFilter: \"fiveMin\",\n  avgLoadAvg: 0,\n  sortBy: \"time\",\n  filesList: [],\n  inodesList: [],\n  dataCpuChart: [],\n  sortDirection: DESC,\n  idItemsSelect: -1,\n  idIRowSelect: -1,\n  infosCpuUsage: [],\n  infosMemoryUsed: [],\n  infosNetworkTransfer: [],\n  infosDiskUtilization: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_METRICS_LIST:\n      return {\n        ...state,\n        metricsListFiltered: state.metricsList,\n      };\n    case GET_FILES_LIST:\n      return {\n        ...state,\n        filesList: formatListSelectAndSort(state.metricsList, \"files\"),\n      };\n    case GET_INODES_LIST:\n      return {\n        ...state,\n        inodesList: formatListSelectAndSort(state.metricsList, \"inodes\"),\n      };\n    case GET_DATA_CPU_CHART: {\n      return {\n        ...state,\n        dataCpuChart: formatDataCpuChart(\n          state.metricsList,\n          state.idItemsSelect,\n          state.infosCpuUsage\n        ),\n      };\n    }\n    case SELECT_LOAD_AVG:\n      return {\n        ...state,\n        loadAvgFilter: action.loadAvgFilter,\n      };\n    case GET_AVG_LOAD_AVG: {\n      let totalLoadAvg = 0;\n      let avg = 0;\n      state.metricsListFiltered.map((e) => {\n        totalLoadAvg += e[action.loadAvgFilter];\n        return totalLoadAvg;\n      });\n      avg =\n        Math.round((totalLoadAvg / state.metricsListFiltered.length) * 100) /\n        100;\n      return {\n        ...state,\n        avgLoadAvg: avg,\n      };\n    }\n    case SELECT_ROW_METRICS:\n      return {\n        ...state,\n        idItemsSelect: action.idItemsSelect,\n        idRowSelect: action.idRowSelect,\n      };\n    case SORT_METRICS_ASC_DESC: {\n      const sortedList = _.sortBy(state.metricsListFiltered, [state.sortBy]);\n      if (state.sortDirection === DESC) {\n        sortedList.reverse();\n      }\n      return {\n        ...state,\n        metricsListFiltered: sortedList,\n        sortDirection: state.sortDirection === ASC ? DESC : ASC,\n      };\n    }\n    case FILTER_METRICS_BY_PARAM: {\n      let metricsListFilteredByParam = [];\n      switch (action.typeParam) {\n        case \"files\":\n          metricsListFilteredByParam = state.metricsList.filter(\n            (e) => e.files === action.paramFilter\n          );\n          break;\n        case \"inodes\":\n          metricsListFilteredByParam = state.metricsList.filter(\n            (e) => e.inodes === action.paramFilter\n          );\n          break;\n        case \"date\":\n          metricsListFilteredByParam = state.metricsList.filter((e) => {\n            const date = moment(e.time, \"DD-MM-YYYY h:mm:ss\").format(\n              \"DD-MM-YYYY h:mm:ss\"\n            );\n            return (\n              date > action.paramFilter.startDate &&\n              date < action.paramFilter.endDate\n            );\n          });\n          break;\n        default:\n          break;\n      }\n      return {\n        ...state,\n        metricsListFiltered: metricsListFilteredByParam.length\n          ? metricsListFilteredByParam\n          : state.metricsList,\n      };\n    }\n    case GET_INFOS_CPU_USAGE: {\n      return {\n        ...state,\n        infosCpuUsage: formatDataCpuUsage(state.metricsListFiltered),\n      };\n    }\n    case GET_INFOS_MEMORY_USED: {\n      return {\n        ...state,\n        infosMemoryUsed: formatDataMemoryUsed(\n          state.metricsListFiltered,\n          state.idItemsSelect\n        ),\n      };\n    }\n    case GET_INFOS_NETWORK_TRANSFER: {\n      return {\n        ...state,\n        infosNetworkTransfer: formatDataNetworkTransfer(\n          state.metricsListFiltered,\n          state.idItemsSelect\n        ),\n      };\n    }\n    case GET_INFOS_DISK_UTILIZATION: {\n      return {\n        ...state,\n        infosDiskUtilization: formatDataDiskUtilization(\n          state.metricsListFiltered,\n          state.idItemsSelect\n        ),\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport metricsReducer from \"./metrics/metricsReducer\";\n\nconst rootReducer = combineReducers({\n  metrics: metricsReducer\n});\n\nexport default function configureStore() {\n  const middlewares = [thunkMiddleware];\n  const middleWareEnhancer = applyMiddleware(...middlewares);\n\n  const store = createStore(\n    rootReducer,\n    composeWithDevTools(middleWareEnhancer)\n  );\n\n  return store;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store/configureStore\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}